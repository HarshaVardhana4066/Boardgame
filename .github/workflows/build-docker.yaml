name: Build and publish image to Docker Hub

permissions:
  contents: write

on:
  push:
    branches:
      - main
      - feature
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Set Version (always bump)
        id: set-version
        run: |
          # Get the latest tag, or start at v1.0.0 if none exist
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")

          # Remove 'v' prefix and split version
          IFS='.' read -r major minor patch <<< "${latest_tag#v}"

          # Increment patch version
          patch=$((patch + 1))

          # Form new version
          new_version="v${major}.${minor}.${patch}"

          echo "Latest tag: $latest_tag"
          echo "New version: $new_version"
          echo "new_version=$new_version" >> "$GITHUB_OUTPUT"

      - name: Set Git user
        run: |
          git config user.name "Harshavardhana"
          git config user.email "your-email@users.noreply.github.com"

      - name: Push Git tag
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version="${{ steps.set-version.outputs.new_version }}"
          git tag -a "$version" -m "Release $version"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} "$version"

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        with:
          tag_name: "${{ steps.set-version.outputs.new_version }}"
          release_name: "Release ${{ steps.set-version.outputs.new_version }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image and push to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile1
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/boardgame-fromgit:${{ steps.set-version.outputs.new_version }}
