name: Build and publish Docker image

permissions:
  contents: write

on:
  push:
    branches:
      - feature
      - main

  pull_request:
    branches:
      - feature
      - main    
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout full repo with tags
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Set Version (always bump)
      - name: Set Version
        id: set-version
        run: |
          # Fetch all tags
          git fetch --tags

          # Get latest tag or default
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          echo "Latest tag: $latest_tag"

          # Split into major.minor.patch
          IFS='.' read -r major minor patch <<< "${latest_tag#v}"

          # Always bump patch
          patch=$((patch + 1))
          new_version="v${major}.${minor}.${patch}"

          echo "New version: $new_version"
          echo "new_version=$new_version" >> "$GITHUB_OUTPUT"

      # 3Ô∏è‚É£ Configure Git
      - name: Set Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 4Ô∏è‚É£ Push Git tag
      - name: Push Git tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version="${{ steps.set-version.outputs.new_version }}"
          git tag -a "$version" -m "Release $version"
          git push origin "$version"

      # 5Ô∏è‚É£ Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ steps.set-version.outputs.new_version }}"
          release_name: "Release ${{ steps.set-version.outputs.new_version }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 6Ô∏è‚É£ Setup JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      # 7Ô∏è‚É£ Build Maven project
      - name: Build with Maven
        run: mvn clean install -DskipTests

      # 8Ô∏è‚É£ Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 9Ô∏è‚É£ Docker login
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # üîü Build and push Docker image
      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile1
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/boardgame-fromgit:${{ steps.set-version.outputs.new_version }}
